{"version":3,"sources":["components/form.js","components/filterbutton.js","components/todo.js","App.js","index.js"],"names":["Form","props","useState","name","setName","onSubmit","event","preventDefault","addTask","type","id","value","onChange","target","className","FilterButton","onClick","setFilter","Todo","isEditing","setEditing","newName","setNewName","editingTemplate","editTask","viewTemplate","defaultChecked","completed","toggleTaskCompleted","deleteTask","FILTERING","All","Active","task","Completed","FILTER_NAMES","Object","keys","App","tasks","setTasks","filter","updatedTasks","map","remainingTasks","editedTaskList","taskList","filterList","isPressed","headingText","length","newTask","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.648aa132.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nfunction Form(props) {\r\n  \r\n  const [name, setName] = useState(\"\");\r\n\r\n  function handleChange(event) {\r\n    setName(event.target.value);\r\n  }\r\n\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n    props.addTask(name);\r\n    setName(\"\");\r\n  }\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <h1> To Do List</h1>\r\n      <h2>What needs to be done? </h2>\r\n      <input\r\n        type=\"text\"\r\n        id=\"input\"\r\n        name=\"text\"\r\n        value={name}\r\n        onChange={handleChange}\r\n      />\r\n      <button className=\"addbutton\" type=\"submit\">ADD</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Form;","import React from \"react\";\r\n\r\nfunction FilterButton(props) {\r\n  return (<>\r\n    <button type=\"button\" className=\"taskbtn\" onClick={() => props.setFilter(props.name)}>\r\n      Show {props.name} Tasks\r\n    </button>\r\n     </>\r\n  );\r\n}\r\n\r\nexport default FilterButton;","import React from \"react\";\r\nimport { useState } from \"react\";\r\n\r\n\r\nconst Todo = (props) => {\r\n  const [isEditing, setEditing] = useState(false);\r\n  const [newName, setNewName] = useState('');\r\n\r\n  function handleChange(event) {\r\n    setNewName(event.target.value);\r\n  }\r\n\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n    props.editTask(props.id, newName);\r\n    setNewName(\"\");\r\n    setEditing(false);\r\n  }\r\n\r\n  const editingTemplate = (\r\n    <form onSubmit={handleSubmit}>\r\n      <div>\r\n          EDIT \"{props.name}\" :\r\n          <input\r\n            id={props.id}\r\n            className=\"todotext\"\r\n            type=\"text\"\r\n            value={newName}\r\n            onChange={handleChange}\r\n          />\r\n      </div>\r\n      \r\n      <div>\r\n          <button type=\"button\" onClick={() => setEditing(false)}>\r\n          CANCEL\r\n          </button>\r\n          <button type=\"submit\">\r\n          SAVE NEW NAME\r\n          </button>\r\n      </div>\r\n    </form>\r\n  );\r\n\r\n  const viewTemplate = (\r\n    <div>\r\n      <div>\r\n          <input\r\n            id={props.id}\r\n            type=\"checkbox\"\r\n            defaultChecked={props.completed}\r\n            onChange={() => props.toggleTaskCompleted(props.id)}\r\n          />{props.name}\r\n      </div>\r\n      <div>\r\n            <button type=\"button\" onClick={() => setEditing(true)}>\r\n            EDIT {props.name}\r\n            </button>\r\n            <button type=\"button\" onClick={() => props.deleteTask(props.id)}>\r\n                DELETE {props.name}\r\n            </button>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n          <li>{isEditing ? editingTemplate : viewTemplate}</li>\r\n  );\r\n  \r\n\r\n}\r\n  \r\nexport default Todo;","import React, { useState } from \"react\";\r\nimport Form from \"./components/form\";\r\nimport FilterButton from \"./components/filterbutton\";\r\nimport Todo from \"./components/todo\";\r\n\r\n\r\nconst FILTERING = {\r\n  All: () => true,\r\n  Active: task => !task.completed,\r\n  Completed: task => task.completed\r\n};\r\n\r\nconst FILTER_NAMES = Object.keys(FILTERING);\r\n\r\nfunction App(props) {\r\n  const [tasks, setTasks] = useState(props.tasks);\r\n  const [filter, setFilter] = useState('All');\r\n\r\n  function toggleTaskCompleted(id) {\r\n    const updatedTasks = tasks.map(task => {\r\n      if (id === task.id) {\r\n        return {...task, completed: !task.completed}\r\n      }\r\n      return task;\r\n    });\r\n    setTasks(updatedTasks);\r\n  }\r\n\r\n  \r\nfunction addTask(name) {\r\n  const newTask = { id: \"id\", name: name, completed: false };\r\n  setTasks([...tasks, newTask]);\r\n}\r\n\r\nfunction deleteTask(id) {\r\n  const remainingTasks = tasks.filter(task => id !== task.id);\r\n  setTasks(remainingTasks);\r\n}\r\n\r\nfunction editTask(id, newName) {\r\n  const editedTaskList = tasks.map(task => {\r\n    if (id === task.id) {\r\n      return {...task, name: newName}\r\n    }\r\n    return task;\r\n  });\r\n  setTasks(editedTaskList);\r\n}\r\n\r\nconst taskList = tasks\r\n.filter(FILTERING[filter])\r\n.map(task => (\r\n  <Todo\r\n    id={task.id}\r\n    name={task.name}\r\n    completed={task.completed}\r\n    key={task.id}\r\n    toggleTaskCompleted={toggleTaskCompleted}\r\n    deleteTask={deleteTask}\r\n    editTask={editTask}\r\n  />\r\n));\r\n\r\nconst filterList = FILTER_NAMES.map(name => (\r\n  <FilterButton\r\n    key={name}\r\n    name={name}\r\n    isPressed={name === filter}\r\n    setFilter={setFilter}\r\n  />\r\n));\r\n\r\nconst headingText = `${taskList.length} tasks are remaining!`;\r\nreturn (\r\n  <div className=\"todoapp\">\r\n    <Form addTask={addTask} />\r\n    <div className=\"filters\">\r\n    {filterList}\r\n    </div>\r\n    <h2 id=\"list-heading\">{headingText}</h2>\r\n    <ul>\r\n      {taskList}\r\n    </ul>\r\n  </div>\r\n);\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nconst data = [\r\n  { id: \"todo-0\", name: \"Eat\", completed: true },\r\n  { id: \"todo-1\", name: \"Sleep\", completed: false },\r\n  { id: \"todo-2\", name: \"Repeat\", completed: false }\r\n];\r\n\r\n\r\nReactDOM.render(<App tasks={data} />, document.getElementById(\"root\"));\r\n\r\n\r\n\r\n"],"sourceRoot":""}